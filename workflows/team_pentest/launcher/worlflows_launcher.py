from typing import List, Any, Optional

import forge
from constants import PLANNER_NODE, TESTING_NODE
from workflows.team_pentest.graph_handlers.graph_executor import launch_as_standalone_agent, launch_graph_as_host
from workflows.team_pentest.graph_host import TEAM_LEAD_TEAM, create_team_lead_graph
from workflows.team_pentest.graph_planning import create_graph_planning_team, PLANNING_TOOLS
from workflows.team_pentest.graph_testing import create_graph_testing_team, TESTING_TOOLS


def start_workflow_team(input_message: str, model_llm, system_message_path: str, tools: List[Any], team_name: str):
    if team_name == PLANNER_NODE:
        graph = create_graph_planning_team(
            model_llm=model_llm,
            system_message_path=system_message_path,
            tools=tools
        )
    elif team_name == TESTING_NODE:
        graph = create_graph_testing_team(
            model_llm=model_llm,
            system_message_path=system_message_path,
            tools=tools
        )
    else:
        raise ValueError(f"Invalid team name: {team_name}")

    launch_as_standalone_agent(
        graph=graph,
        input_message=input_message,
        team_name=team_name
    )


def start_investigation_team_workflow(task_message: Optional[str] = None):
    """
    Starts the workflow by creating a team lead graph and launching it as a host investigation agent.

    Args:
        task_message: A string containing the task or instructions for the team lead agent.

    The function will:
    - Create an LLM (Large Language Model) for use by the workflow.
    - Generate a team lead graph using the LLM.
    - Launch the graph as a host investigation agent with the provided task message.
    """

    model_llm_dict = {
        'claude': forge.create_llm('Claude 3.5 Sonnet'),
        'gpt': forge.create_llm(model_name='gpt-4o-mini')
    }
    system_messages = {
        TEAM_LEAD_TEAM: 'host_team/host#1.txt',
        PLANNER_NODE: {
            'planner': 'planning_team/operation_planner#3.txt',
            'helper': 'helper_agent/helper#1.txt'
        },
        TESTING_NODE: 'testing_team/pentest_msf#1.txt'
    }

    teams_tools = {
        TEAM_LEAD_TEAM: [],
        PLANNER_NODE: PLANNING_TOOLS,
        TESTING_NODE: TESTING_TOOLS
    }


    # Launch the workflow as a host investigation agent with the provided task message
    launch_graph_as_host(
        graph=create_team_lead_graph(
            model_llm_dict=model_llm_dict,
            system_messages=system_messages,
            teams_tools=teams_tools,
        ),
        task_message=task_message,
        live_mode=True,
        file_path='resources/states/Planning_Experimental_Team_snapshots_23_09_2024_14_19'
    )
